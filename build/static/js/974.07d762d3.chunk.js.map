{"version":3,"file":"static/js/974.07d762d3.chunk.js","mappings":"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","sources":["lib/DateTime.js","services/constant.js","services/http.service.js","views/orders/backorderRequest/BackorderDetail.jsx"],"sourcesContent":["export const simpleDate = (unformated) => {\r\n  let date = new Date(0).setUTCSeconds(unformated)\r\n  date = new Date(date)\r\n  let formated =\r\n    (date.getDate() <= 9 ? '0' + date.getDate() : date.getDate()) +\r\n    '-' +\r\n    (date.getMonth() <= 9 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) +\r\n    '-' +\r\n    date.getFullYear()\r\n  return formated\r\n}\r\n","export default class Constants {\r\n  static BASE_URL = 'https://staging.admin.garnenterprise.com/'\r\n  static END_POINT = {\r\n    LOGIN: 'api/VnLoginApi',\r\n\r\n    GET_CATEGORIES: 'api/vendor_categories',\r\n    GET_CAT_PRODUCTS: 'api/GnProductsApi/',\r\n\r\n    GET_WHOLESALERS: 'api/vendor_vendors',\r\n    GET_WHOLESALERS_PRODUCTS: 'api/vendor_products',\r\n\r\n    GET_FEATURES: 'api/vendor_features',\r\n\r\n    CART: 'api/cart/',\r\n    STOCK_REQUEST: 'api/stock_requests/',\r\n    BACKORDER: 'api/backorder/',\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport Constants from './constant'\r\nimport { isAuthenticated } from './auth'\r\nimport { Buffer } from 'buffer'\r\n\r\nexport const getData = (url, p) => {\r\n  var username = 'wholesaler_app@ecarter.co'\r\n  var password = '09i4u73157N5Jnl3f6C6t2XAKa5qFO31'\r\n  p.params.user_id = isAuthenticated()?.user_id\r\n  console.log(p)\r\n  return axios\r\n    .get(\r\n      Constants.BASE_URL + url.toString(),\r\n      { params: p.params, auth: { username, password } },\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      },\r\n    )\r\n    .then((response) => {\r\n      if (response.status === 401) {\r\n        localStorage.removeItem('jwt')\r\n      }\r\n      console.log(response.data)\r\n      return response.data\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem('jwt')\r\n      }\r\n      return error\r\n    })\r\n}\r\nexport const postData = (url, body) => {\r\n  var username = 'wholesaler_app@ecarter.co'\r\n  var password = '09i4u73157N5Jnl3f6C6t2XAKa5qFO31'\r\n  return axios\r\n    .post(\r\n      Constants.BASE_URL + url.toString(),\r\n      body,\r\n      { auth: { username, password } },\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      },\r\n    )\r\n    .then((response) => {\r\n      console.log(response.data)\r\n      return response.data\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response)\r\n      return error\r\n    })\r\n}\r\nexport const putData = (url, body) => {\r\n  var username = 'wholesaler_app@ecarter.co'\r\n  var password = '09i4u73157N5Jnl3f6C6t2XAKa5qFO31'\r\n  const encodedBase64Token = Buffer.from(`${username}:${password}`).toString('base64')\r\n  const authorization = `Basic ${encodedBase64Token}`\r\n  return axios\r\n    .put(Constants.BASE_URL + url.toString(), body, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: authorization,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      // console.log(response.data)\r\n      return response.data\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n      return error\r\n    })\r\n}\r\nexport const patchData = (url, body) => {\r\n  return axios\r\n    .patch(Constants.BASE_URL + url.toString(), body, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${isAuthenticated()}`,\r\n      },\r\n    })\r\n    .then((response) => {\r\n      console.log(response.data)\r\n      return response.data\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n      return error\r\n    })\r\n}\r\nexport const deleteData = (url, body) => {\r\n  return axios\r\n    .delete(\r\n      Constants.BASE_URL + url.toString(),\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${isAuthenticated()}`,\r\n        },\r\n      },\r\n      body,\r\n    )\r\n    .then((response) => {\r\n      console.log(response.data)\r\n      return response.data\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n      return error\r\n    })\r\n}\r\nexport const uploadFile = (url, body) => {\r\n  var username = 'wholesaler_app@ecarter.co'\r\n  var password = '09i4u73157N5Jnl3f6C6t2XAKa5qFO31'\r\n  const encodedBase64Token = Buffer.from(`${username}:${password}`).toString('base64')\r\n  const authorization = `Basic ${encodedBase64Token}`\r\n  return axios\r\n    .post(\r\n      Constants.BASE_URL + url.toString(),\r\n      {\r\n        headers: {\r\n          'content-type': 'multipart/form-data',\r\n          Authorization: authorization,\r\n        },\r\n      },\r\n      body,\r\n    )\r\n    .then((response) => {\r\n      console.log(response.data)\r\n      return response.data\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n      return error\r\n    })\r\n}\r\n","import React, { useState, useEffect } from 'react'\nimport { CCard, CCardBody, CCol, CCardHeader, CRow } from '@coreui/react'\nimport { useSearchParams } from 'react-router-dom'\nimport { Form } from 'react-bootstrap'\n\nimport { getData } from 'src/services/http.service.js'\nimport Constants from 'src/services/constant.js'\n\nimport { simpleDate } from 'src/lib/DateTime.js'\n\nexport default function StockRequest() {\n  const [searchParams, setSearchParams] = useSearchParams()\n  let id = searchParams.get('id')\n  useEffect(() => {\n    getBackorder()\n  }, [id])\n\n  const [requests, setRequests] = useState([])\n\n  const renderBackorder = () => {\n    return Object.keys(requests?.backorder).map((p_id, i) => (\n      <CCard className=\"my-2\" key={i}>\n        <CCardBody className=\"p-2\">\n          <div className=\"row text-uppercase paragraph3\">\n            <div className=\"col-8 row\">\n              <div className=\"col\">\n                WHOLESALER NAME&PHONE\n                <div className=\"paragraph2 text_bold text-black\">\n                  {requests?.backorder[p_id]?.user_data?.company}\n                </div>\n                <div className=\"paragraph2 text_bold text-black\">\n                  {' '}\n                  {requests?.backorder[p_id]?.user_data?.phone}\n                </div>\n              </div>\n              <div className=\"col\">\n                ADDRESS\n                <div className=\"paragraph2 text_bold text-black\">\n                  {' '}\n                  {requests?.backorder[p_id]?.user_data?.address}\n                </div>\n              </div>\n              <div className=\"col\">\n                PURCHASING DATE\n                <div className=\"paragraph2 text_bold text-black\">\n                  {' '}\n                  {requests?.backorder[p_id]?.date && simpleDate(requests?.backorder[p_id]?.date)}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-3 offset-1 p-0\">\n              <Form.Select aria-label=\"Default  select example\" className=\"qr_button p-2\">\n                <option> Processing</option>\n                <option value=\"Pending\">Pending</option>\n                <option value=\"On Client\">On Client</option>\n                <option value=\"Confirmed\">Confirmed</option>\n                <option value=\"Ready to Dispatch\">Ready to Dispatch</option>\n              </Form.Select>\n            </div>\n          </div>\n        </CCardBody>\n      </CCard>\n    ))\n  }\n\n  const getBackorder = () => {\n    getData(Constants.END_POINT.BACKORDER + '/' + id, {\n      params: {},\n    })\n      .then((result) => {\n        console.log(result)\n        setRequests(result)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  const renderProducts = () => {\n    return Object.keys(requests?.product_data).map((p_id, i) => (\n      <CRow key={i} className=\"mb-2 p-2\">\n        <CCol md={5}>\n          <CRow className=\"\">\n            <CCol md={3}>\n              <div className=\"stock_bg rounded p-1\">\n                <img\n                  src={requests?.product_data[p_id]?.image_pairs?.detailed?.https_image_path}\n                  alt=\"\"\n                  className=\"w-50  m-auto d-block\"\n                />\n              </div>\n            </CCol>\n            <CCol md={9}>\n              <p className=\"\">{requests?.product_data[p_id]?.product}</p>\n            </CCol>\n          </CRow>\n        </CCol>\n        <CCol md={7}>\n          <CRow>\n            <CCol md={2}>\n              <p className=\"heading6 text_semibold\">\n                {/* {item?.variation_features?.['557']?.variant || 0} */}\n              </p>\n            </CCol>\n            <CCol md={2}>\n              <p className=\"heading6 text_semibold\">\n                {/* {item?.variation_features?.['548']?.variant || 0} */}\n              </p>\n            </CCol>\n            <CCol md={2}>\n              <p className=\"heading6 text_semibold\">{requests?.product_data[p_id]?.amount}</p>\n            </CCol>\n            <CCol md={3}>\n              <p className=\"heading6 text_semibold\">{requests?.total_system_weight}</p>\n            </CCol>\n            <CCol md={3}>\n              <p className=\"heading6 text_semibold \">\n                {requests?.product_data[p_id]?.actual_weight}\n              </p>\n            </CCol>\n          </CRow>\n        </CCol>\n      </CRow>\n    ))\n  }\n  return (\n    <div>\n      <CCard className=\"my-2\">\n        <CCardBody className=\"p-2\">\n          <div className=\"row text-uppercase paragraph3\">\n            <div className=\"col-8 row\">\n              <div className=\"col\">\n                ORDER NO.\n                <div className=\"paragraph2 text_bold text-black\">{requests?.backorder_id}</div>\n              </div>\n              <div className=\"col\">\n                REQUESTED DATE\n                <div className=\"paragraph2 text_bold text-black\">\n                  {requests?.date && simpleDate(requests?.date)}\n                </div>\n              </div>\n              <div className=\"col\">\n                PICK UP DATE\n                <div className=\"paragraph2 text_bold text-black\">\n                  {requests?.pickup_date && simpleDate(requests?.pickup_date)}\n                </div>\n              </div>\n            </div>\n          </div>\n        </CCardBody>\n      </CCard>\n      <div className=\"row mt-4\">\n        <div className=\"col-md-5 col-12\">\n          <p className=\"text_medium\">PRODUCTS</p>\n        </div>\n        <div className=\"col-md-7 col-12\">\n          <div className=\"row\">\n            <div className=\"col-md-2\">\n              <p className=\"text_medium\">WEIGHT</p>\n            </div>\n            <div className=\"col-md-2\">\n              <p className=\"text_medium\">SIZE</p>\n            </div>\n            <div className=\"col-md-2\">\n              <p className=\"text_medium\">QUANTITY</p>\n            </div>\n            <div className=\"col-md-3\">\n              <p className=\"text_medium\">SYSTEM WEIGHT</p>\n            </div>\n            <div className=\"col-md-3\">\n              <p className=\"text_medium\">ACTUAL WEIGHT</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <CCard className=\"\">\n        <CCardBody className=\"p-0\">{requests?.product_data && renderProducts()}</CCardBody>\n      </CCard>\n      {requests?.backorder && Object.keys(requests?.backorder).length ? renderBackorder() : null}\n    </div>\n  )\n}\n"],"names":["simpleDate","unformated","date","Date","setUTCSeconds","getDate","getMonth","getFullYear","Constants","BASE_URL","END_POINT","LOGIN","GET_CATEGORIES","GET_CAT_PRODUCTS","GET_WHOLESALERS","GET_WHOLESALERS_PRODUCTS","GET_FEATURES","CART","STOCK_REQUEST","BACKORDER","getData","url","p","params","user_id","isAuthenticated","console","log","axios","toString","auth","username","password","headers","then","response","status","localStorage","removeItem","data","catch","error","postData","body","StockRequest","useSearchParams","searchParams","id","get","useEffect","getBackorder","useState","requests","setRequests","result","err","className","backorder_id","pickup_date","product_data","Object","keys","map","p_id","i","md","src","image_pairs","detailed","https_image_path","alt","product","amount","total_system_weight","actual_weight","backorder","length","user_data","company","phone","address","value"],"sourceRoot":""}